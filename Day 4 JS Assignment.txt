 Anonymous function:
//1.Print odd numbers in an array

var odd = function (num){
    let oddNum = [];
  for(let i = 0; i<num.length; i++){
      if(num[i]%2==1){
        oddNum.push(num[i]);
        
      }
  } 
console.log(oddNum);    
};

var num = [1,2,3,4,5];
odd(num);
//output
//[1, 3, 5]

//print odd numbers using IIFE

var number = [1,2,3,4,5];
   var oddNum = [];
(function (){
    
     for(var i = 0; i<number.length; i++){
      if(number[i]%2!=0){
          oddNum.push(number[i])
        
      }
  } 
    console.log(oddNum);
})(number);

//output
//[1, 3, 5]

//Print odd numbers in an array
//Using arrow function

let integerArray = [1, 2, 3, 4, 5, 6,7,8,9];

let oddNum=integerArray.filter((num) => {

return num % 2 !== 0;
});
console.log(oddNum);

//output
//[1, 3, 5, 7, 9]


//-----------------------------------------------------------------------------------------------


//2.Convert all the strings to title caps in a string array
// anonymous function
let caps = function (str) {
  str = str.toLowerCase().split(' ');
  for (var i = 0; i < str.length; i++) {
    str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1); 
  }
  console.log( str.join(' '));
}
caps("I am a liTTle tEa pOt");
 
//output
I Am A Little Tea Pot

// title case using IIFE

var str = ["i'm", "a", "little", "tea", "pot"];

(function (){
	for (var i = 0; i < str.length; i++) {
	     str[i] = str[i].toLowerCase();
		str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);
	}
	console.log(str.join(' '));
})(str);

//output
I Am A Little Tea Pot.


 //Using arrow function

 let str1 = ["Gowri", "is", "a", "good", "person"];

 let strCaps = str1.map((item) => {

    return item.charAt(0).toUpperCase() + item.slice(1).toLowerCase();

});
console.log( strCaps.join(' '));
//output
//Gowri Is A Good Person


//------------------------------------------------------------------------------------------




//3.Sum of all numbers in an array
//sum of numbers using  anonymous function

let add = function (num){
    let sum = 0;
    for(let i = 0; i<num.length; i++){
        sum+=num[i];
    }
    console.log(sum);
};

var num= [11,32,43,54,65];
add(num);
//output
//205

//sum of numbers in an array using IIFE
var num= [11,32,43,54,65];
(function (){
    let sum = 0;
    for(let i = 0; i<num.length; i++){
        sum+=n[i];
    } 
    console.log(sum);
})(num);

//output
//205

//sum of numbers using arrow function

var array= [11,32,43,54,65];
const add1=array.reduce((a,b)=>a+b);
console.log([add1]);
//output:
//[205]


//--------------------------------------------------------------------------------------------------



//4.Return all the prime numbers in an array
// Using Anonymous fucntion.

var primeNo=function(num){

    var  arr=[];
    for(i=0;i<num.length;i++)
    {
        var count=0;
        for(j=1;j<=num[i];j++)
        {
            if(num[i]%j===0)
            {
                count++;
            }
        }
        if(count==2)
        {
            arr.push(num[i]);
        }
    }
    console.log(arr);
};
primeNo([1,2,3,4,5,6,7,8,9,11]);

//output
//[2, 3, 5, 7, 11]

//Using IIFE

(function(num){
    var  arr=[];
    for(i=0;i<num.length;i++){
        count1=0;
        for(j=1;j<=num[i];j++){
            
            if(num[i]%j===0){
                count1++;
            }
            
        }
            
        if(count1==2){
                arr.push(num[i]);
            
        }
    }
    console.log(arr);
 
})
([1,2,3,4,5,6,7,8,9,11]);

//output
//[2, 3, 5, 7, 11]

//using arrow function

let prime1 = (arr) => {
    return arr.filter((n) => {
      for (let i = 2; i < n; i++) {
        if (n % i === 0) {
          return false;
        }
      }
      return n > 1;
    });
  };
  console.log(prime1([1,2,3,4,5,6,7,8,9,10]));
  //output
  //[ 2, 3, 5, 7 ]

//------------------------------------------------------------------------------------------


//5.Return all the palindromes in an array
//anonymous function

let palindrome = function(arr){
    var rev =[];
    for(let i=0;i<arr.length;i++){
        let revarray = arr[i];
        let str = revarray.split('').reverse().join('');
        if(str==arr[i])
       rev.push(arr[i]);
        }
     console.log(rev);
   
};
var arr =["Software", "mom", "dad", "madam", "teacher"];

palindrome(arr);

//output
//['mom', 'dad', 'madam']


//using IIFE function

var str =["Software", "mom", "dad", "madam", "teacher"];
(function(str){
    var rev =[];
    for(let i=0;i<str.length;i++){
        let revarray = str[i];
        let str1 = revarray.split('').reverse().join('');
        if(str1==str[i])
       rev.push(str[i]);
        }
     console.log(rev);
   
})(str);  
//output
//['mom', 'dad', 'madam']


//using arrow function
var arr =["Software", "mom", "dad", "madam", "teacher"];
arr = arr.filter((s) =>{
let len = s.length;
for (var i = 0; i<len / 2; i++) {
if (s[i] == s[len - i - 1]){
return true;
}
else{
return false;
}
}
});
console.log(arr);
//output
//[ 'mom', 'dad', 'madam' ]


//-----------------------------------------------------------------------------------------------------


//6.Return median of two sorted arrays of the same size.
//anonymous function
let median = function (arr1,arr2){
    let arr = [...arr1, ...arr2];
    
    arr.sort((a,b) => a-b);
    let len = arr.length;
  
    if(len%2!==0){

 let ans = arr[Math.round(len/2)-1];
 let final = ans;

 }else{

 ans = arr[Math.round(len/2)-1]+arr[Math.round(len/2)];
 final = ans;

}
console.log(final);
};
var arr1 = [3,2,1,4,5];
var arr2 = [8,6,7,9,10];
median(arr1,arr2);
//output
//11

//Return median of two sorted array using IIFE

var arr1 = [3,2,1,4,5];
var arr2 = [8,6,7,9,10];
(function (){
   
let arr = [...arr1, ...arr2];
    
    arr.sort((a,b) => a-b);
    let len = arr.length;
  
    if(len%2!==0){

 let ans = arr[Math.round(len/2)-1];
 let final = ans;

 }else{

 ans = arr[Math.round(len/2)-1]+arr[Math.round(len/2)];
 final = ans;
 }
 console.log(final);
})(arr1,arr2);
//output
//11

//----------------------------------------------------------------------------------------------------


//7.Remove duplicates from an array
//Using anonymous function

var duplicate=function(arr){
    var limit = {};
   
    for(let i = 0; i < arr.length; i++) {
       if(limit[arr[i]]) {
         limit[arr[i]] = limit[arr[i]] + 1;
       } else {
         limit[arr[i]] = 1;
       }
    }
   
   let finalOut = [];
   for(let x in limit) {
     if(limit[x] === 1) {
       finalOut.push(x);
     }
   }
   
   console.log(finalOut.map(Number)); 
   
   };
   duplicate([11,121,11,3,0,5,12,6]);
   //output
   //[ 0, 3, 5, 6 ]
   
   //Using IIFE
   
   (function (arr){
     var limit = {};
   
    for(let i = 0; i < arr.length; i++) {
       if(limit[arr[i]]) {
         limit[arr[i]] = limit[arr[i]] + 1;
       } else {
         limit[arr[i]] = 1;
       }
    }
   
   let finalOut = [];
   for(let x in limit) {
     if(limit[x] === 1) {
       finalOut.push(x);
     }
   }
   
   console.log(finalOut.map(Number));   
   })([11,121,11,3,0,5,12,6]);
   
   //output
   /[ 0, 3, 5, 6 ]


//---------------------------------------------------------------------------------------------------------


   //8.Rotate an array by k times
//Using anonymous function
let rotation = function (arr,n,d)
{
    let p = 1;
        while (p <= k) {
            let last = arr[0];
            for (let i = 0; i < n - 1; i++) {
                arr[i] = arr[i + 1];
            }
            arr[n - 1] = last;
            p++;
            
        }
         let out = [];
        for (let i = 0; i < n; i++) {
           out.push(arr[i]);
            
        }
        console.log(out);
};
var arr =[4,5,6,1,2,3];
var n = arr.length;
var k = 3;

rotation(arr, n,k);

//output
//[ 1, 2, 3, 4, 5, 6 ]

//Using IIFE

var arr =[4,5,6,1,2,3];
var n = arr.length;
var k = 3;

(function(arr,n,k){
   let p = 1;
        while (p <= k) {
            let last = arr[0];
            for (let i = 0; i < n - 1; i++) {
                arr[i] = arr[i + 1];
            }
            arr[n - 1] = last;
            p++;
            
        }
         let out = [];
        for (let i = 0; i < n; i++) {
            out.push(arr[i]);
            
        }
        console.log(out);  
})(arr,n,k);

//output
//[ 1, 2, 3, 4, 5, 6 ]
